name: Build and Deploy Qt6 WebAssembly App

on:
  push:
    branches:
      - main
      - qt6-cmake-version
  pull_request:
    branches:
      - main
  workflow_dispatch:  # Allow manual triggering

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository with submodules
      uses: actions/checkout@v4
      with:
        submodules: recursive
        fetch-depth: 0

    - name: Validate submodules
      run: |
        if [ ! -f "qml-box2d/CMakeLists.txt" ]; then
          echo "ERROR: qml-box2d submodule not properly initialized"
          exit 1
        fi
        echo "Submodules validated successfully"

    - name: Cache Emscripten
      id: cache-emsdk
      uses: actions/cache@v4
      with:
        path: emsdk
        key: emsdk-3.1.50-ubuntu
        restore-keys: emsdk-3.1.50-

    - name: Set up Emscripten
      if: steps.cache-emsdk.outputs.cache-hit != 'true'
      run: |
        git clone https://github.com/emscripten-core/emsdk.git
        cd emsdk
        ./emsdk install 3.1.50
        ./emsdk activate 3.1.50

    - name: Activate Emscripten environment
      run: |
        cd emsdk
        source ./emsdk_env.sh
        echo "EMSDK=$(pwd)" >> $GITHUB_ENV
        echo "$(pwd)" >> $GITHUB_PATH
        echo "$(pwd)/upstream/emscripten" >> $GITHUB_PATH

    - name: Cache Qt6 WebAssembly
      id: cache-qt6-wasm
      uses: actions/cache@v4
      with:
        path: qt6-wasm
        key: qt6-6.5.2-wasm-ubuntu
        restore-keys: qt6-6.5.2-wasm-

    - name: Install Qt6 for WebAssembly
      if: steps.cache-qt6-wasm.outputs.cache-hit != 'true'
      run: |
        # Install aqtinstall
        pip3 install aqtinstall
        
        # Install Qt6 WebAssembly
        mkdir -p qt6-wasm
        cd qt6-wasm
        aqt install-qt linux desktop 6.5.2 wasm_multithread -m qt5compat qtshadertools

    - name: Set up Qt6 WebAssembly environment
      run: |
        export QT_ROOT="$(pwd)/qt6-wasm/6.5.2/wasm_multithread"
        echo "QT_ROOT=$QT_ROOT" >> $GITHUB_ENV
        echo "Qt6_DIR=$QT_ROOT/lib/cmake/Qt6" >> $GITHUB_ENV
        echo "PATH=$QT_ROOT/bin:$PATH" >> $GITHUB_ENV

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y cmake ninja-build

    - name: Configure CMake for WebAssembly
      run: |
        source emsdk/emsdk_env.sh
        mkdir -p build-wasm
        cd build-wasm
        
        emcmake cmake .. \
          -G Ninja \
          -DCMAKE_BUILD_TYPE=Release \
          -DQT_HOST_PATH=/usr \
          -DCMAKE_PREFIX_PATH="$QT_ROOT" \
          -DCMAKE_CROSSCOMPILING_EMULATOR="node" \
          -DBUILD_TESTING=OFF

    - name: Build WebAssembly application
      run: |
        source emsdk/emsdk_env.sh
        cd build-wasm
        cmake --build . --parallel $(nproc)

    - name: Prepare deployment files
      run: |
        cd build-wasm
        
        # Create web deployment directory
        mkdir -p ../web-deploy
        
        # Copy WebAssembly files
        cp BubblesApp.* ../web-deploy/
        cp qtloader.js ../web-deploy/ 2>/dev/null || true
        cp qtlogo.svg ../web-deploy/ 2>/dev/null || true
        
        # Create index.html if it doesn't exist
        if [ ! -f "../web-deploy/index.html" ]; then
          cat > ../web-deploy/index.html << 'EOF'
        <!DOCTYPE html>
        <html lang="en">
        <head>
            <meta charset="utf-8">
            <meta name="viewport" content="width=device-width, initial-scale=1">
            <title>Bubbles Qt6 WebAssembly App</title>
            <style>
                body {
                    font-family: Arial, sans-serif;
                    margin: 0;
                    padding: 20px;
                    background-color: #f0f0f0;
                    display: flex;
                    flex-direction: column;
                    align-items: center;
                }
                .container {
                    max-width: 1200px;
                    background: white;
                    border-radius: 10px;
                    padding: 20px;
                    box-shadow: 0 4px 6px rgba(0,0,0,0.1);
                }
                h1 {
                    color: #333;
                    text-align: center;
                }
                #status {
                    text-align: center;
                    margin: 20px 0;
                    font-weight: bold;
                }
                #qtapp {
                    margin: 20px auto;
                    display: block;
                }
                .loading {
                    color: #666;
                }
                .error {
                    color: #d32f2f;
                }
                .ready {
                    color: #388e3c;
                }
            </style>
        </head>
        <body>
            <div class="container">
                <h1>ðŸ«§ Bubbles Physics Game</h1>
                <div id="status" class="loading">Loading Qt WebAssembly application...</div>
                <canvas id="qtapp" oncontextmenu="return false;"></canvas>
            </div>
            
            <script type="text/javascript">
                var statusElement = document.getElementById('status');
                var canvas = document.getElementById('qtapp');
                
                function setStatus(text, className) {
                    statusElement.textContent = text;
                    statusElement.className = className;
                }
                
                var qtLoader = {
                    canvasElements: [canvas],
                    showLoader: function() {
                        setStatus('Loading Qt WebAssembly application...', 'loading');
                    },
                    showError: function(error) {
                        setStatus('Error: ' + error, 'error');
                        console.error(error);
                    },
                    showExit: function() {
                        setStatus('Application finished.', 'ready');
                    },
                    showCanvas: function() {
                        setStatus('Application ready! Click and interact with the bubbles!', 'ready');
                    }
                };
                
                qtLoader.showLoader();
            </script>
            <script type="text/javascript" src="qtloader.js"></script>
            <script type="text/javascript">
                qtLoader.loadEmscriptenModule("BubblesApp");
            </script>
        </body>
        </html>
        EOF
        fi
        
        # List deployment files
        echo "Deployment files:"
        ls -la ../web-deploy/

    - name: Setup Pages
      uses: actions/configure-pages@v4

    - name: Upload to GitHub Pages
      uses: actions/upload-pages-artifact@v3
      with:
        path: web-deploy

  deploy:
    needs: build
    if: github.ref == 'refs/heads/main'  # Only deploy from main branch
    runs-on: ubuntu-latest
    
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4

